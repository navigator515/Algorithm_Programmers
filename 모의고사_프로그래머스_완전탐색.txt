#include <string>
#include <vector>
#include <algorithm>
using namespace std;
vector<int> solution(vector<int> answers) {
    vector<int> answer;
    int su1[]={1,2,3,4,5};//수포자1이 찍는 규칙
    int su2[]={2,1,2,3,2,4,2,5};//수포자2가 찍는 규칙
    int su3[]={3,3,1,1,2,2,4,4,5,5};//수포자3이 찍는 규칙
    int i;
    int num1,num2,num3;//수포자의 답과 정답을 비교할때 나머지 연산자를 이용한 인덱스 역할
    int cnt1=0,cnt2=0,cnt3=0;//수포자들이 맞는 문항 갯수 저장 변수
    int max_cnt;//가장 많이 맞춘 갯수
    
    for(i=0;i<answers.size();i++){
        //규칙적으로 답을 써내려가기 때문에 나머지 연산자를 통해서 인덱스를 알아내 비교할 수 있다.
        num1=i%5;
        num2=i%8;
        num3=i%10;
        
         if(answers[i]==su1[num1])cnt1++;
         if(answers[i]==su2[num2])cnt2++;
         if(answers[i]==su3[num3])cnt3++;
    }

    max_cnt=max(cnt1,max(cnt2,cnt3));
    //max(A,B);  둘중에 큰수를 리턴하는 함수.    
    //가장 많이 맞춘 수포자를 결정해야하지만 동일한 점수일 경우를 생각해 하나씩 비교한다.
    if(max_cnt==cnt1)
        answer.push_back(1);
    if(max_cnt==cnt2)
        answer.push_back(2);
    if(max_cnt==cnt3)
        answer.push_back(3);
    
    //마지막에 오름차순으로 정렬해서 리턴한다.     
    sort(answer.begin(),answer.end());
    return answer;
}